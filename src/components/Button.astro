---
import type { HTMLAttributes } from "astro/types";
import { cva, type VariantProps } from "class-variance-authority";
import { classnames } from "@/utils/classnames";


// <button type="button" class="text-white bg-blue-700 hover:bg-blue-800 focus:outline-none focus:ring-4 focus:ring-blue-300 font-medium rounded-full text-sm px-5 py-2.5 text-center me-2 mb-2 dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800">Default</button>

const button = cva("rounded-full text-center cursor-pointer", {
  variants: {
    variant: {
      primary: [
        "bg-blue-500",
        "text-white",
        "border-transparent",
        "hover:bg-blue-600",
      ],
      secondary: [
        "bg-yellow-500",
        "text-gray-800",
        "border-gray-400",
        "hover:bg-gray-100",
      ],
    },
    size: {
      small: ["text-sm", "py-1", "px-2"],
      medium: ["text-base", "py-2", "px-4"],
    },
  },
  defaultVariants: {
    variant: "primary",
    size: "small",
  },
  compoundVariants: [
    { variant: "primary", size: "medium", class: "uppercase" },
  ],
});

export interface Props extends HTMLAttributes<"button">, VariantProps<typeof button> {}

const { variant = "primary", size = "medium", ...props } = Astro.props;
---

<button class={classnames(button({ variant, size, class:Astro.props.class }))}>
  <slot />
</button>
